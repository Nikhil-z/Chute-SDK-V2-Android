apply plugin: 'com.android.library'

android {
  compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
  buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

  defaultConfig {
    targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK_VERSION)

    buildTypes {
      release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      }
    }
  }
  testOptions {
    unitTests.returnDefaultValues = true
  }
  lintOptions {
    abortOnError false
  }

  buildTypes.all { buildType ->
      // assign different version code for each output
      //Copy test resources to classpath folder. See https://code.google.com/p/android/issues/detail?id=74443
    def copyTestResourcesTask = project.tasks.create("copyTest${buildType.name.capitalize()}Resources", Copy)
    copyTestResourcesTask.from("${projectDir}/src/test/resources")
    copyTestResourcesTask.into("${buildDir}/intermediates/classes/test/${buildType.name.capitalize()}/")
    tasks.findByName("assemble${buildType.name.capitalize()}").dependsOn(copyTestResourcesTask)
  }
}


dependencies {

  compile 'com.aranea-apps.android.libs:android-rest:2.9.0'
  compile 'com.aranea-apps.android.libs:android-rest-additions:2.9.0'

  testCompile files('libs/core-0.8.2.jar')
  testCompile 'junit:junit:4.9'
}

apply from: '../gradle-mvn-push.gradle'
